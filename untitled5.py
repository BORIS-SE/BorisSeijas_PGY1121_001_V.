# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wf2d1WYLhXrb8LBp9xuexxlRBB2hEZjY
"""

import re

# Definir una matriz para representar la disponibilidad de apartamentos
departamentos_disponibles = [
    [" ", " ", " ", " "],
    [" ", " ", " ", " "],
    [" ", " ", " ", " "],
    [" ", " ", " ", " "],
    [" ", " ", " ", " "],
    [" ", " ", " ", " "],
    [" ", " ", " ", " "],
    [" ", " ", " ", " "],
    [" ", " ", " ", " "],
    [" ", " ", " ", " "],
    [" ", " ", " ", " "]

]
# lista para almacenar total de ganancias
ganancias_total = []

# Lista para almacenar los detalles de los departamentos seleccionados por los clientes
departamentos_seleccionados = []

# Función para mostrar la disponibilidad de departamentos
def mostrar_disponibilidad():
    print("departamentos Disponibles:")
    for fila in departamentos_disponibles:
        print(" ".join(fila))


# Función para permitir al cliente seleccionar un departamento
def seleccionar_departamento():
    while True:
        rut = input("Ingrese su RUT: ")
        if validar_rut(rut):
            while True:
                try:
                    fila = int(input("Ingrese la fila del departamento: "))
                    columna = int(input("Ingrese la columna del departamento: "))
                    if departamentos_disponibles[fila][columna] == " ":
                        # departamentos disponible, solicitar los datos personales del cliente
                        while True:
                            nombre = input("Ingrese su nombre completo: ")
                            if validar_nombre(nombre):
                                while True:
                                    telefono = input("Ingrese su teléfono: ")
                                    if validar_numero(telefono):
                                        while True:
                                            email = input("Ingrese su email: ")
                                            if validar_email(email):
                                                # Crear un diccionario con los detalles del departamentos y los datos del cliente
                                                departamentos_seleccionado = {
                                                    "fila": fila,
                                                    "columna": columna,
                                                    "cliente": {
                                                        "RUT": rut,
                                                        "nombre": nombre,
                                                        "telefono": telefono,
                                                        "email": email
                                                    }
                                                }

                                                # Agregar el departamento seleccionado a la lista de departamentos seleccionados
                                                departamentos_seleccionados.append(departamentos_seleccionado)

                                                # Marcar el departamento como vendido en la matriz de disponibilidad
                                                departamentos_disponibles[fila][columna] = "X"

                                                print("departamento seleccionado con éxito.")
                                                return
                                            else:
                                                print("Error: Email inválido")
                                    else:
                                        print("Error: Teléfono inválido")
                            else:
                                print("Error: Nombre inválido")
                    else:
                        print("El departamento seleccionado no está disponible.")
                except (ValueError, IndexError):
                    print("Por favor, ingrese una opción válida.")
        else:
            print("El RUT ingresado no es válido. Por favor, intente nuevamente.")


def ver_detalles_departamentos():
    if len(departamentos_seleccionados) == 0:
        print("No hay departamentos seleccionados.")
    else:
        fila = int(input("Ingrese la fila del departamento seleccionado: "))
        columna = int(input("Ingrese la columna del departamento seleccionado: "))

        for departamento in departamentos_seleccionados:
            if departamento["fila"] == fila and departamento["columna"] == columna:
                print("Detalles del departamento seleccionado:")
                print(f"Número de departamento: {departamento['fila']}-{departamento['columna']}")
                # Agregar más detalles del departamento si es necesario
                break
        else:
            print("El departamento seleccionado no existe.")



def validar_rut(rut):
    rut = rut.replace(".", "").replace("-", "").upper()
    rut_numeros, dv = rut[:-1], rut[-1]
    try:
        rut_numeros = int(rut_numeros)
    except ValueError:
        return False
    if rut_numeros < 1:
        return False
    suma = 0
    multiplicador = 2
    while rut_numeros > 0:
        suma += (rut_numeros % 10) * multiplicador
        rut_numeros //= 10
        multiplicador += 1
        if multiplicador == 8:
            multiplicador = 2
    dv_calculado = 11 - (suma % 11)
    if dv_calculado == 11:
        dv_calculado = "0"
    elif dv_calculado == 10:
        dv_calculado = "K"
    else:
        dv_calculado = str(dv_calculado)
    return dv == dv_calculado

def validar_nombre(nombre):
    patron = "^[a-zA-Z\s]+$"
    if re.match(patron, nombre):
        return True
    else:
        return False

def validar_numero(cadena):
    if cadena.isdigit() and len(cadena) == 9:
        return True
    else:
        return False

def validar_email(email):
    patron = r'^[\w\.-]+@[\w\.-]+\.\w+$'
    if re.match(patron, email):
        return True
    else:
        return False

# Función para mostrar la lista de clientes que han comprado un departamento
def mostrar_clientes():
    if len(departamentos_seleccionados) == 0:
        print("No hay clientes registrados.")
    else:
        print("Lista de clientes:")
        for departamentos in departamentos_seleccionados:
            cliente = departamentos["cliente"]
            print(f"Cliente: {cliente['nombre']}")
            print(f"RUT: {cliente['RUT']}")
            print(f"Teléfono: {cliente['telefono']}")
            print(f"Email: {cliente['email']}")
            print()

# Función para salir del programa
def salir():
    print("Gracias por utilizar Casa Feliz . ¡Hasta luego!")

# Función principal que ejecuta el programa
def main():
    while True:
        print("********Bienvenido a Casa Feliz********")
        print("*********Seleccione una opción:********")
        print("1. Mostrar departamentos disponibles")
        print("2. Comprar departamento")
        print("3. Mostrar ganancias totales")
        print("4. Ver listado de compradores")
        print("5. Salir")

        opcion = input("Ingrese el número de la opción deseada: ")

        if opcion == "1":
            mostrar_disponibilidad()
        elif opcion == "2":
            seleccionar_departamento()
        elif opcion == "3":
            ver_detalles_departamentos()
        elif opcion == "4":
            mostrar_clientes()
        elif opcion == "5":
            salir()
            break
        else:
            print("Opción inválida. Por favor, ingrese una opción válida.")

# Ejecutar el programa33
main()

total_viajes = 0
total_ingresos = 0
descuento_1 = 0.8
descuento_2 = 0.9
opcion = 0
descuento_total = 0

while opcion != 3:
    print(" ***** ¡BIENVENIDO A TAXIS RAPIDO Y SEGURO! ***** ")
    print("")
    print("1. Ingresar un nuevo viaje e imprimir recibo.")
    print("2. Imprimir estadisticas de viajes (cantidad de viajes realizados, total diario recaudado).")
    print("3. Salir")
    print("")
    try:
        opcion = int(input("Por favor seleccione una opcion: "))
        if opcion > 3 or opcion < 1:
          print("Opcion invalida. Por favor, ingrese un numero entre 1 y 3.")
          print("")


          if opcion == 1:

            origen = input("Ingrese el origen: ")
            destino = input("Ingrese el destino: ")
            distancia = float(input("Ingrese la distancia (en kilometros): "))
            tiempo_espera = int(input("Ingrese el tiempo de espera (en minutos): "))

            if distancia >= 0 and tiempo_espera >= 0:
                tarifa_base = 500
                costo_por_km = 100
                costo_por_minuto = 20
                costo_viaje = tarifa_base + (distancia * costo_por_km) + (tiempo_espera * costo_por_minuto)

                es_cliente_frecuente = int(input("¿Es un cliente frecuente?: \n 1 - SI  \n 2 - NO"))
                if es_cliente_frecuente == 1:
                  descuento_total=costo_viaje - (costo_viaje*descuento_2)
                es_viaje_aeropuerto = int(input("¿Es un viaje al aeropuerto?: \n 1 - SI  \n 2 - NO"))

                if es_viaje_aeropuerto == 1:
                  descuento_total +=costo_viaje - (costo_viaje*descuento_1)
                if es_cliente_frecuente == 1 or es_viaje_aeropuerto == 1:
                  costo_viaje -= descuento_total

                print("")
                print("***** RECIBO DE TICKETS DE VIAJE *****")
                print("Origen:", origen)
                print("Destino:", destino)
                print("Tiempo de Espera:", tiempo_espera, "minutos")
                print("Distancia:", distancia, "kilometros")
                print("Tarifa Base: $500")
                print("Costo por Kilómetro: $100")
                print("Costo por Minuto de Espera: $20")
                print("Descuentos Aplicados: $", descuento_total)
                print("Costo Total: $", costo_viaje)
                print("*******************************************")

                total_viajes += 1
                total_ingresos += costo_viaje
          else:
                print("Distancia o tiempo de espera invalidos. Por favor, vuelva a ingresar un valor.")



        elif opcion == 2:
          print("")
          print("**************************************************************")
          print("Estadisticas de viajes e ingresos recaudados el dia de hoy:")
          print("- Total de viajes realizados:", total_viajes)
          print("- Total ingresos recaudados:", total_ingresos)
          print("**************************************************************")
          print("")

        elif opcion == 3:
          print("")
          print("Saliendo del sistema. ¡Hasta luego!")

    except ValueError:
        print("Ha ocurrido un error. Por favor, ingrese un valor válido.")